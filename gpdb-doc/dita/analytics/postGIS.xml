<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title id="ij138244">Geospatial Analytics</title>
  <body>
    <p>This chapter contains the following information:</p>
    <ul>
      <li id="ij166737">
        <xref href="#topic2" type="topic" format="dita"/>
      </li>
      <li id="ij168801">
        <xref href="#topic3" type="topic" format="dita"/>
      </li>
      <li>
        <xref href="#topic_b2l_hzw_q1b" format="dita"/></li>
      <li id="ij168827">
        <xref href="#topic7" type="topic" format="dita"/>
      </li>
      <li>
        <xref href="#postgis_support" format="dita"/>
      </li>
    </ul>
    <p>For information about upgrading PostGIS on Greenplum Database 6 systems, see <xref
        href="postgis-upgrade.xml"/></p>
  </body>
  <topic id="topic2" xml:lang="en">
    <title id="ij166739">About PostGIS</title>
    <body>
      <p>PostGIS is a spatial database extension for PostgreSQL that allows GIS (Geographic
        Information Systems) objects to be stored in the database. The Greenplum PostGIS extension
        includes support for GiST-based R-Tree spatial indexes and functions for analysis and
        processing of GIS objects. </p>
      <p>The Greenplum PostGIS extension supports some PostGIS optional extensions and includes
        support for the PostGIS <codeph>raster</codeph> data type. With the PostGIS Raster objects,
        PostGIS <codeph>geometry</codeph> data type offers a single set of overlay SQL functions
        (such as <codeph>ST_Intersects</codeph>) operating seamlessly on vector and raster
        geospatial data. PostGIS Raster uses the GDAL (Geospatial Data Abstraction Library)
        translator library for raster geospatial data formats that presents a <xref
          href="https://gdal.org/user/raster_data_model.html" format="html" scope="external">single
          raster abstract data model</xref> to a calling application. </p>
      <p>For information about Greenplum Database PostGIS extension support, see <xref
          href="#postgis_support" format="dita"/>.</p>
      <p>For information about PostGIS, see <xref href="https://postgis.net/" scope="external"
          format="html">https://postgis.net/</xref>
      </p>
      <p>For information about GDAL, see <xref href="https://gdal.org/" format="html"
          scope="external">https://gdal.org/</xref>. </p>
    </body>
  </topic>
  <topic id="topic3" xml:lang="en">
    <title id="ij168742">Greenplum PostGIS Extension</title>
    <body>
      <p><ph otherprops="pivotal">The Greenplum PostGIS extension package is available from <xref
            href="https://network.pivotal.io/products/pivotal-gpdb" scope="external" format="html"
            >VMware Tanzu Network</xref>. </ph>You can install the package using the Greenplum
        Package Manager (<codeph>gppkg</codeph>). For details, see <codeph>gppkg</codeph> in the
          <cite>Greenplum Database Utility Guide</cite>.</p>
      <p>Greenplum Database supports the PostGIS extension with these component versions.<ul
          id="ul_csh_q3z_d1b">
          <li>PostGIS 2.5.4</li>
          <li>Proj 4.8.0 </li>
          <li>Geos 3.4.2</li>
          <li>GDAL 1.11.1</li>
          <li>Json 0.12</li>
          <li>Expat 2.1.0</li>
        </ul></p>
      <p otherprops="pivotal">For the information about supported Greenplum extension packages and
        software versions, see <xref href="../install_guide/platform-requirements.xml"/>. </p>
      <p>There have been significant changes in PostGIS 2.5.4 compared with the previously supported
        version of 2.1.5. For a list of new and enhanced functions in PostGIS 2.5, see the PostGIS
        documentation <xref
          href="https://postgis.net/docs/manual-2.5/PostGIS_Special_Functions_Index.html#NewFunctions_2_5"
          format="html" scope="external">PostGIS Functions new or enhanced in 2.5</xref>.</p>
      <p>For a comprehensive list of PostGIS changes in PostGIS 2.5.4 and earlier, see PostGIS 2.5
        Appendix A <xref href="https://postgis.net/docs/manual-2.5/release_notes.html" format="html"
          scope="external">Release 2.5.4</xref>.</p>
      <note>If you installed Greenplum PostGIS 2.1.5, you cannot upgrade from PostGIS 2.1.5 to
        2.5.4. You must uninstall PostGIS 2.1.5 and install PostGIS 2.5.4.</note>
      <p>This table lists the PostGIS extensions support by Greenplum PostGIS. </p>
      <table frame="all" rowsep="1" colsep="1" id="table_owt_4ml_xlb">
        <title>Greenplum PostGIS Extensions</title>
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="2.05*"/>
          <thead>
            <row>
              <entry>PostGIS Extension</entry>
              <entry>Greenplum PostGIS Notes</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><codeph>postgis</codeph><p dir="ltr">PostGIS and PostGIS Raster
                support</p></entry>
              <entry>Supported. Both PostGIS and PostGIS Raster are enabled when the Greenplum
                  <codeph>postgis</codeph> extension is enabled.</entry>
            </row>
            <row>
              <entry><codeph>postgis_tiger_geocoder</codeph><p>The US TIGER geocoder</p></entry>
              <entry>Supported. Installed with Greenplum PostGIS. <p>Requires the
                    <codeph>postgis</codeph> and <codeph>fuzzystrmatch</codeph>
                  extensions.</p><p>The US TIGER geocoder converts addresses (like a street address)
                  to geographic coordinates.</p></entry>
            </row>
            <row>
              <entry><codeph>address_standardizer</codeph><p>Rule-based address
                standardizer</p></entry>
              <entry>Supported. Installed but not enabled with Greenplum PostGIS. <p>Can be used
                  with TIGER geocoder.</p><p>A single line address parser that takes an input
                  address and normalizes it based on a set of rules stored in a table and helper
                    <codeph>lex</codeph> and <codeph>gaz</codeph> tables.</p></entry>
            </row>
            <row>
              <entry><codeph>address_standardizer_data_us</codeph><p>Sample rules tables for US
                  address data</p></entry>
              <entry>Supported. Installed but not enabled with Greenplum PostGIS.<p>Can be used with
                  the address standardizer.</p><p>The extension contains <codeph>gaz</codeph>,
                    <codeph>lex</codeph>, and <codeph>rules</codeph> tables for US address data. If
                  you are using other types of tables, see <xref href="#topic_wy2_rkb_3p"
                    format="dita"/>.</p></entry>
            </row>
            <row>
              <entry><codeph>fuzzystrmatch</codeph><p>Fuzzy string matching</p></entry>
              <entry>Supported. This extension is bundled but not enabled with Greenplum
                  Database.<p>Required for the PostGIS TIGER geocoder.</p></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <note>The PostGIS topology extension <codeph>postgis_topology</codeph> and the PostGIS 3D and
        geoprocessing extension <codeph>postgis_sfcgal</codeph> are not supported by Greenplum
        PostGIS and are not included in the Greenplum PostGIS extension package.</note>
      <p>For information about the PostGIS extensions, see the <xref
          href="https://postgis.net/documentation/" format="html" scope="external">PostGIS 2.5
          documentation</xref>.</p>
      <p>For information about Greenplum PostGIS feature support, see <xref href="#postgis_support"
          format="dita"/>.</p>
    </body>
  </topic>
  <topic id="topic_b2l_hzw_q1b">
    <title>Enabling and Removing PostGIS Support</title>
    <body>
      <p>This section describes how to enable and remove PostGIS and the supported PostGIS
        extensions, and how to configure PostGIS Raster.<ul id="ul_dnm_lzm_1mb">
          <li><xref href="#topic_ln5_xcl_r1b" format="dita"/></li>
          <li><xref href="#topic_ydr_q5l_ybb" format="dita"/></li>
          <li><xref href="#topic_fx2_fpx_llb" format="dita"/></li>
          <li><xref href="#topic_bgz_vcl_r1b" format="dita"/></li>
        </ul></p>
      <p>For information about upgrading PostGIS on Greenplum Database 6 systems, see <xref
          href="postgis-upgrade.xml"/></p>
    </body>
    <topic id="topic_ln5_xcl_r1b">
      <title>Enabling PostGIS Support</title>
      <body>
        <p>To enable PostGIS support, install the Greenplum PostGIS extension package into the
          Greenplum Database system, and then use the <codeph>CREATE EXTENSION</codeph> command to
          enable PostGIS support for an individual database.</p>
        <section>
          <title>Installing the Greenplum PostGIS Extension Package</title>
          <p>Install Greenplum PostGIS extension package with the <codeph>gppkg</codeph> utility.
            For example, this command installs the package for RHEL 7.
            <codeblock>gppkg -i postgis-2.5.4+pivotal.2.build.1-gp6-rhel7-x86_64.gppkg</codeblock></p>
          <p>After installing the package, source the <codeph>greenplum_path.sh</codeph> file and
            restart Greenplum Database. This command restarts Greenplum Database.</p>
          <codeblock>gpstop -ra</codeblock>
          <p dir="ltr">Installing the Greenplum PostGIS extension package updates the Greenplum
            Database system, including installing the supported PostGIS extensions to the system and
            updating <codeph>greenplum_path.sh</codeph> file with these lines for PostGIS Raster
            support.</p>
          <codeblock>export GDAL_DATA=$GPHOME/share/gdal
export POSTGIS_ENABLE_OUTDB_RASTERS=0
export POSTGIS_GDAL_ENABLED_DRIVERS=DISABLE_ALL</codeblock>
        </section>
        <section id="enable_postgis_cmd">
          <title>Using the CREATE EXTENSION Command</title>
          <p dir="ltr">These steps enable the PostGIS extension and the extensions that are used
            with PostGIS.</p>
          <ol id="ol_mdh_z1k_zlb">
            <li>To enable PostGIS and PostGIS Raster in a database, run this command after logging
              into the database.<codeblock dir="ltr">CREATE EXTENSION postgis ;</codeblock><p>To
                enable PostGIS and PostGIS Raster in a specific schema, create the schema, set the
                  <codeph>search_path</codeph> to the PostGIS schema, and then enable the
                  <codeph>postgis</codeph> extension with the <codeph>WITH SCHEMA</codeph> clause.
                </p><codeblock>SHOW search_path ; -- display the current search_path
CREATE SCHEMA &lt;schema_name> ;
SET search_path TO &lt;schema_name> ;
CREATE EXTENSION postgis WITH SCHEMA &lt;schema_name> ;</codeblock><p>After
                enabling the extension, reset the <codeph>search_path</codeph> and include the
                PostGIS schema in the <codeph>search_path</codeph> if needed.</p></li>
            <li>If needed, enable the PostGIS TIGER geocoder after enabling the
                <codeph>postgis</codeph> extension. <p>To enable the PostGIS TIGER geocoder, you
                must enable the <codeph>fuzzystrmatch</codeph> extension before enabling
                  <codeph>postgis_tiger_geocoder</codeph>. These two commands enable the
                extensions.</p><codeblock dir="ltr">CREATE EXTENSION fuzzystrmatch ;
CREATE EXTENSION postgis_tiger_geocoder ;</codeblock></li>
            <li>If needed, enable the rules-based address standardizer and add rules tables for the
              standardizer. These commands enable the
              extensions.<codeblock dir="ltr">CREATE EXTENSION address_standardizer ;
CREATE EXTENSION address_standardizer_data_us ;</codeblock></li>
          </ol>
        </section>
      </body>
    </topic>
    <topic id="topic_ydr_q5l_ybb">
      <title>Enabling GDAL Raster Drivers</title>
      <body>
        <p>PostGIS uses GDAL raster drivers when processing raster data with commands such as
            <codeph>ST_AsJPEG()</codeph>. As the default, PostGIS disables all raster drivers. You
          enable raster drivers by setting the value of the
            <codeph>POSTGIS_GDAL_ENABLED_DRIVERS</codeph> environment variable in the
            <codeph>greenplum_path.sh</codeph> file on all Greenplum Database hosts.</p>
        <p>Alternatively, you can do it at the session level by setting
            <codeph>postgis.gdal_enabled_drivers</codeph>. For a Greenplum Database session, this
          example <codeph>SET</codeph> command enables three GDAL raster
          drivers.<codeblock>SET postgis.gdal_enabled_drivers TO 'GTiff PNG JPEG';</codeblock></p>
        <p>This <codeph>SET</codeph> command sets the enabled drivers to the default for a session.
          <codeblock>SET postgis.gdal_enabled_drivers = default;</codeblock></p>
        <p>To see the list of supported GDAL raster drivers for a Greenplum Database system, run the
            <codeph>raster2pgsql</codeph> utility with the <codeph>-G</codeph> option on the
          Greenplum Database master.</p>
        <p>
          <codeblock>raster2pgsql -G </codeblock>
        </p>
        <p>The command lists the driver long format name. The <cite>GDAL Raster</cite> table at
            <xref href="https://gdal.org/drivers/raster/index.html" format="html" scope="external"
            >https://gdal.org/drivers/raster/index.html</xref> lists the long format names and the
          corresponding codes that you specify as the value of the environment variable. For
          example, the code for the long name Portable Network Graphics is <codeph>PNG</codeph>.
          This example <codeph>export</codeph> line enables four GDAL raster drivers.</p>
        <codeblock>export POSTGIS_GDAL_ENABLED_DRIVERS="GTiff PNG JPEG GIF"</codeblock>
        <p>The <codeph>gpstop -r</codeph> command restarts the Greenplum Database system to use the
          updated settings in the <codeph>greenplum_path.sh</codeph> file.</p>
        <p>After you have updated the <codeph>greenplum_path.sh</codeph> file on all hosts, and have
          restarted the Greenplum Database system, you can display the enabled raster drivers with
          the <codeph>ST_GDALDrivers()</codeph> function. This <codeph>SELECT</codeph> command lists
          the enabled raster drivers.</p>
        <codeblock>SELECT short_name, long_name FROM ST_GDALDrivers();</codeblock>
      </body>
    </topic>
    <topic id="topic_fx2_fpx_llb">
      <title>Enabling Out-of-Database Rasters</title>
      <body>
        <p>After installing PostGIS, the default setting
            <codeph>POSTGIS_ENABLE_OUTDB_RASTERS=0</codeph> in the
            <codeph>greenplum_path.sh</codeph> file disables support for to out-of-database rasters.
          To enable this feature, you can set the value to true (a non-zero value) on all hosts and
          restart the Greenplum Database system. </p>
        <p>You can also enable or disable this feature for a Greenplum Database session. For
          example, this <codeph>SET</codeph> command enables the feature for the current
          session.</p>
        <codeblock>SET postgis.enable_outdb_rasters = true;				</codeblock>
        <note>When the feature is enabled, the server configuration parameter
            <codeph>postgis.gdal_enabled_drivers</codeph> determines the accessible raster
          formats.</note>
      </body>
    </topic>
    <topic id="topic_bgz_vcl_r1b">
      <title>Removing PostGIS Support</title>
      <body>
        <p dir="ltr">You use the <codeph>DROP EXTENSION</codeph> command to remove support for the
          PostGIS extension and the extensions that are used with PostGIS.</p>
        <p>Removing PostGIS support from a database does not remove these PostGIS Raster environment
          variables from the <codeph>greenplum_path.sh</codeph> file: <codeph>GDAL_DATA</codeph>,
            <codeph>POSTGIS_ENABLE_OUTDB_RASTERS</codeph>,
            <codeph>POSTGIS_GDAL_ENABLED_DRIVERS</codeph>. The environment variables are removed
          when you uninstall the PostGIS extension package.</p>
        <note type="warning">Removing PostGIS support from a database drops PostGIS database objects
          from the database without warning. Users accessing PostGIS objects might interfere with
          the dropping of PostGIS objects. See <xref href="#topic_bgz_vcl_r1b/postgis_note"
            format="dita">Notes</xref>.</note>
        <section id="drop_postgis_cmd">
          <title>Using the DROP EXTENSION Command</title>
          <p>Depending on the extensions you enabled for PostGIS, drop support for the extensions in
            the database.</p>
          <ol id="ol_ylb_cgk_zlb">
            <li>If you enabled the address standardizer and sample rules tables, these commands drop
              support for those extensions from the current
              database.<codeblock dir="ltr">DROP EXTENSION IF EXISTS address_standardizer_data_us;
DROP EXTENSION IF EXISTS address_standardizer;</codeblock></li>
            <li>If you enabled the TIGER geocoder and the <codeph>fuzzystrmatch</codeph> extension
              to use the TIGER geocoder, these commands drop support for those
              extensions.<codeblock dir="ltr">DROP EXTENSION IF EXISTS postgis_tiger_geocoder;
DROP EXTENSION IF EXISTS fuzzystrmatch;</codeblock></li>
            <li>Drop support for PostGIS and PostGIS Raster. This command drops support for those
                extensions.<codeblock>DROP EXTENSION IF EXISTS postgis;</codeblock><p>If you enabled
                support for PostGIS and specified a specific schema with the <codeph>CREATE
                  EXTENSION</codeph> command, you can update the <codeph>search_path</codeph> and
                drop the PostGIS schema if required.</p></li>
          </ol>
        </section>
        <section>
          <title>Uninstalling the Greenplum PostGIS Extension Package</title>
          <p>After PostGIS support has been removed from all databases in the Greenplum Database
            system, you can remove the PostGIS extension package. For example, this
              <codeph>gppkg</codeph> command removes the PostGIS extension package.
            <codeblock>gppkg -r postgis-2.5.4+pivotal.2</codeblock></p>
          <p dir="ltr">After removing the package, ensure that these lines for PostGIS Raster
            support are removed from the <codeph>greenplum_path.sh</codeph> file.</p>
          <codeblock>export GDAL_DATA=$GPHOME/share/gdal
export POSTGIS_ENABLE_OUTDB_RASTERS=0
export POSTGIS_GDAL_ENABLED_DRIVERS=DISABLE_ALL</codeblock>
          <p>Source the <codeph>greenplum_path.sh</codeph> file and restart Greenplum Database. This
            command restarts Greenplum Database.</p>
          <codeblock>gpstop -ra</codeblock>
        </section>
        <section id="postgis_note">
          <title>Notes</title>
          <p>Removing PostGIS support from a database drops PostGIS objects from the database.
            Dropping the PostGIS objects cascades to objects that reference the PostGIS objects.
            Before removing PostGIS support, ensure that no users are accessing the database. Users
            accessing PostGIS objects might interfere with dropping PostGIS objects.</p>
          <p>For example, this <codeph>CREATE TABLE</codeph> command creates a table with column
              <codeph>b</codeph> that is defined with the PostGIS <codeph>geometry</codeph> data
            type.<codeblock># CREATE TABLE test(a int, b geometry) DISTRIBUTED RANDOMLY;</codeblock></p>
          <p>This is the table definition in a database with PostGIS
            enabled.<codeblock># \d test
 Table "public.test"
 Column |   Type   | Modifiers
--------+----------+-----------
 a      | integer  |
 b      | geometry |
Distributed randomly</codeblock></p>
          <p>This is the table definition in a database after PostGIS support has been
            removed.<codeblock># \d test
  Table "public.test"
 Column |  Type   | Modifiers
--------+---------+-----------
 a      | integer |
Distributed randomly</codeblock></p>
        </section>
      </body>
    </topic>
  </topic>
  <topic id="topic7" xml:lang="en">
    <title id="ij170351">Usage</title>
    <body>
      <p>
        <ph>The following example SQL statements create non-OpenGIS tables and geometries.</ph>
      </p>
      <codeblock>CREATE TABLE geom_test ( gid int4, geom geometry, 
  name varchar(25) );

INSERT INTO geom_test ( gid, geom, name )
  VALUES ( 1, 'POLYGON((0 0 0,0 5 0,5 5 0,5 0 0,0 0 0))', '3D Square');
INSERT INTO geom_test ( gid, geom, name ) 
  VALUES ( 2, 'LINESTRING(1 1 1,5 5 5,7 7 5)', '3D Line' );
INSERT INTO geom_test ( gid, geom, name )
  VALUES ( 3, 'MULTIPOINT(3 4,8 9)', '2D Aggregate Point' );

SELECT * from geom_test WHERE geom &amp;&amp;
  Box3D(ST_GeomFromEWKT('LINESTRING(2 2 0, 3 3 0)'));</codeblock>
      <p>The following example SQL statements create a table and add a geometry column to the table
        with a SRID integer value that references an entry in the <codeph>SPATIAL_REF_SYS</codeph>
        table. The <codeph>INSERT</codeph> statements add two geopoints to the table.</p>
      <codeblock>CREATE TABLE geotest (id INT4, name VARCHAR(32) );
SELECT AddGeometryColumn('geotest','geopoint', 4326,'POINT',2);

INSERT INTO geotest (id, name, geopoint)
  VALUES (1, 'Olympia', ST_GeometryFromText('POINT(-122.90 46.97)', 4326));
INSERT INTO geotest (id, name, geopoint)
  VALUES (2, 'Renton', ST_GeometryFromText('POINT(-122.22 47.50)', 4326));

SELECT name,ST_AsText(geopoint) FROM geotest;</codeblock>
    </body>
    <topic id="topic8" xml:lang="en">
      <title>Spatial Indexes</title>
      <body>
        <p>PostgreSQL provides support for GiST spatial indexing. The GiST scheme offers indexing
          even on large objects. It uses a system of lossy indexing in which smaller objects act as
          proxies for larger ones in the index. In the PostGIS indexing system, all objects use
          their bounding boxes as proxies in the index.</p>
      </body>
      <topic id="topic9" xml:lang="en">
        <title>Building a Spatial Index</title>
        <body>
          <p>You can build a GiST index as follows:</p>
          <codeblock>CREATE INDEX <i>indexname</i>
  ON <i>tablename</i>
  USING GIST ( <i>geometryfield</i> );</codeblock>
        </body>
      </topic>
    </topic>
  </topic>
  <topic id="postgis_support">
    <title>PostGIS Extension Support and Limitations</title>
    <body>
      <p>This section describes Greenplum PostGIS extension feature support and limitations.</p>
      <ul id="ul_gvb_b4b_3p">
        <li>
          <xref href="#topic_g2d_hkb_3p" format="dita"/>
        </li>
        <li>
          <xref href="#topic_bl3_4vy_d1b" format="dita"/></li>
        <li>
          <xref href="#topic_y5z_nkb_3p" format="dita"/>
        </li>
        <li>
          <xref href="#topic_wy2_rkb_3p" format="dita"/>
        </li>
      </ul>
      <p>In general, the Greenplum PostGIS extension does not support the following features:</p>
      <ul id="ul_kjr_tpl_1mb">
        <li>The PostGIS topology extension <codeph>postgis_topology</codeph></li>
        <li>The PostGIS 3D and geoprocessing extension <codeph>postgis_sfcgal</codeph></li>
        <li>A small number of user defined functions and aggregates</li>
        <li>PostGIS long transactions</li>
      </ul>
      <p>For the PostGIS extensions supported by Greenplum PostGIS, see <xref href="#topic3"
          format="dita"/>.</p>
    </body>
    <topic id="topic_g2d_hkb_3p">
      <title>Supported PostGIS Data Types</title>
      <body>
        <p>Greenplum PostGIS extension supports these PostGIS data types:</p>
        <ul id="ul_bdm_qnp_fp">
          <li dir="ltr">box2d</li>
          <li dir="ltr">box3d</li>
          <li dir="ltr">geometry</li>
          <li dir="ltr">geography</li>
        </ul>
        <p>For a list of PostGIS data types, operators, and functions, see the <xref
            href="https://postgis.net/docs/manual-2.5/reference.html" format="html" scope="external"
            >PostGIS reference documentation</xref>.</p>
      </body>
    </topic>
    <topic id="topic_bl3_4vy_d1b">
      <title>Supported PostGIS Raster Data Types</title>
      <body>
        <p dir="ltr">Greenplum PostGIS supports these PostGIS Raster data types. </p>
        <ul id="ul_obf_z2m_d1b">
          <li dir="ltr">geomval</li>
          <li dir="ltr">addbandarg</li>
          <li dir="ltr">rastbandarg</li>
          <li dir="ltr">raster</li>
          <li dir="ltr">reclassarg </li>
          <li dir="ltr">summarystats </li>
          <li dir="ltr">unionarg</li>
        </ul>
        <p>For information about PostGIS Raster data Management, queries, and applications, see
            <xref href="https://postgis.net/docs/manual-2.5/using_raster_dataman.html" format="html"
            scope="external"
          >https://postgis.net/docs/manual-2.5/using_raster_dataman.html</xref>.</p>
        <p>For a list of PostGIS Raster data types, operators, and functions, see the <xref
            href="https://postgis.net/docs/manual-2.5/RT_reference.html" format="html"
            scope="external">PostGIS Raster reference documentation</xref>.</p>
      </body>
    </topic>
    <topic id="topic_y5z_nkb_3p">
      <title>Supported PostGIS Index</title>
      <body>
        <p>Greenplum PostGIS extension supports the GiST (Generalized Search Tree) index.</p>
      </body>
    </topic>
    <topic id="topic_wy2_rkb_3p">
      <title>PostGIS Extension Limitations</title>
      <body>
        <p>This section lists the Greenplum PostGIS extension limitations for user-defined functions
          (UDFs), data types, and aggregates. </p>
        <ul id="ul_vzc_bpb_3p">
          <li>Data types and functions related to PostGIS topology functionality, such as
              <apiname>TopoGeometry</apiname>, are not supported by Greenplum Database.</li>
          <li>These PostGIS aggregates are not supported by Greenplum Database:<ul
              id="ul_ylg_hpb_3p">
              <li><apiname>ST_Collect</apiname></li>
              <li><apiname>ST_MakeLine</apiname></li>
            </ul><p>On a Greenplum Database with multiple segments, the aggregate might return
              different answers if it is called several times repeatedly.</p></li>
          <li>
            <p>Greenplum Database does not support PostGIS long transactions.</p>
            <p>PostGIS relies on triggers and the PostGIS table
                <codeph>public.authorization_table</codeph> for long transaction support. When
              PostGIS attempts to acquire locks for long transactions, Greenplum Database reports
              errors citing that the function cannot access the relation,
                <codeph>authorization_table</codeph>.</p>
          </li>
          <li>Greenplum Database does not support type modifiers for user defined types. <p>The work
              around is to use the <codeph>AddGeometryColumn</codeph> function for PostGIS geometry.
              For example, a table with PostGIS geometry cannot be created with the following SQL
              command:<codeblock>CREATE TABLE geometries(id INTEGER, geom geometry(LINESTRING));</codeblock>Use
              the <codeph>AddGeometryColumn</codeph> function to add PostGIS geometry to a table.
              For example, these following SQL statements create a table and add PostGIS geometry to
              the
              table:<codeblock>CREATE TABLE geometries(id INTEGER);
SELECT AddGeometryColumn('public', 'geometries', 'geom', 0, 'LINESTRING', 2);</codeblock></p></li>
          <li>The <codeph>_postgis_index_extent</codeph> function is not supported on Greenplum
            Database 6 due to its dependence on spatial index operations.</li>
          <li>The <codeph>&lt;-></codeph> operator (<codeph><varname>geometry</varname> &lt;->
                <varname>geometry</varname></codeph>) returns the centroid/centroid distance for
            Greenplum Database 6.</li>
          <li>The following PostGIS functions are not currently supported because Greenplum PostGIS
            is compiled with Geos 3.4.2:<ul id="ul_hdm_j4l_xlb">
              <li dir="ltr">ST_Subdivide</li>
              <li dir="ltr">​ST_ClipByBox2D</li>
              <li dir="ltr">ST_VoronoiLines</li>
              <li dir="ltr">ST_VoronoiPolygons</li>
            </ul></li>
          <li>The TIGER geocoder extension is supported. However, upgrading the TIGER geocoder
            extension is not supported.</li>
          <li>The <codeph>standardize_address()</codeph> function uses <codeph>lex</codeph>,
              <codeph>gaz</codeph> or <codeph>rules</codeph> tables as parameters. If you are using
            tables apart from <codeph>us_lex</codeph>, <codeph>us_gaz</codeph> or
              <codeph>us_rules</codeph>, you should create them with the distribution policy
              <codeph>DISTRIBUTED REPLICATED</codeph> to work for Greenplum. </li>
        </ul>
      </body>
    </topic>
  </topic>
</topic>
